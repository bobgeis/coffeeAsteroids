// Generated by CoffeeScript 1.10.0
(function() {
  "Hud\n\nThese are parts of the \"Heads Up Display\".\nThey represent things shown on the screen to the player that aren't directly\npart of the game world.  For example a readout of the player's shields.\n";
  var BarGraph, C, U, drawText;

  U = {};

  _first.offer('hud', U);

  C = _first.request('config');

  BarGraph = (function() {
    function BarGraph(name, obj, field, fieldMax, colorEmpty, colorFull, x1, y1) {
      this.name = name;
      this.obj = obj;
      this.field = field;
      this.fieldMax = fieldMax;
      this.colorEmpty = colorEmpty;
      this.colorFull = colorFull;
      this.x = x1;
      this.y = y1;
    }

    BarGraph.prototype.draw = function(ctx) {
      var color, percent, ratio;
      ratio = this.getRatio();
      color = this.getColor(ratio);
      ctx.fillStyle = color;
      ctx.font = "10px Arial";
      ctx.fillText(this.name, this.x, this.y);
      percent = Math.floor(100 * ratio);
      ctx.lineWidth = 5;
      ctx.strokeStyle = color;
      ctx.beginPath();
      ctx.moveTo(this.x, this.y + 10);
      ctx.lineTo(this.x + percent, this.y + 10);
      ctx.stroke();
      ctx.closePath();
      return ctx.fillText(percent + "%", this.x + 75, this.y);
    };

    BarGraph.prototype.getRatio = function() {
      return 1 - Math.min(1, this.obj[this.field] / this.obj[this.fieldMax]);
    };

    BarGraph.prototype.update = function(dt) {};

    BarGraph.prototype.getColor = function(ratio) {
      var colors, i, j;
      colors = [];
      for (i = j = 0; j < 4; i = ++j) {
        colors.push(Math.floor((this.colorFull[i] - this.colorEmpty[i]) * ratio + this.colorEmpty[i]));
      }
      return "rgba(" + colors[0] + "," + colors[1] + "," + colors[2] + "," + colors[3] + ")";
    };

    return BarGraph;

  })();

  U.shipShieldBar = function(ship) {
    var bar, dangerColor, safeColor;
    safeColor = [100, 120, 255, 1.0];
    dangerColor = [255, 120, 100, 1.0];
    bar = new BarGraph("Shields", ship, "damage", "maxDamage", dangerColor, safeColor, 10, 10);
    return bar;
  };

  U.shipBeamEnergyBar = function(ship) {
    var bar, emptyColor, fullColor;
    fullColor = [100, 255, 100, 1.0];
    emptyColor = [255, 200, 0, 1.0];
    bar = new BarGraph("Energy", ship, "beamEnergy", "beamEnergyMax", emptyColor, fullColor, 10, 40);
    return bar;
  };

  drawText = function(ctx, text, size, x, y) {
    var w;
    ctx.fillStyle = "#FFFFFF";
    ctx.font = (Math.floor(size)) + "px Arial";
    w = Math.floor((ctx.measureText(text)).width / 2);
    return ctx.fillText(text, Math.floor(x) - w, Math.floor(y) - Math.floor(size));
  };

}).call(this);
